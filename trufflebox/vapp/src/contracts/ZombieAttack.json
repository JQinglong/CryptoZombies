{
  "contractName": "ZombieAttack",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getZombiesByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "level",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "winCount",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getZombiesByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/usr/src/app/contracts/zombieattack.sol\":\"ZombieAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/usr/src/app/contracts/ownable.sol\":{\"keccak256\":\"0x6d07a01ba21d5c1059b2af1ffe0f55d49b73f3ce537a6ea3fd40378c4ad34e50\",\"urls\":[\"bzz-raw://9684076fdda9ccf67251e967704a7b9e76cc6333d272c1d63c84d298c76929ff\",\"dweb:/ipfs/QmTWyQ9ZxB6xbJ5aKpGhm8jmmVMdNM4ucLgpoLfvEcwKf1\"]},\"/usr/src/app/contracts/zombieattack.sol\":{\"keccak256\":\"0xb94e63659780773bb69a733a94b7ec41fb7ef5dbde09e3731b251fcd91c6b02e\",\"urls\":[\"bzz-raw://43ca3b85fd4564a1b9470853207cf8ca6862a8109a18521021f1c978f73faf3d\",\"dweb:/ipfs/Qma5MjUMhJkzousNQp78Fz9XAPbJdJaDENHEtEzPr1UKVN\"]},\"/usr/src/app/contracts/zombiefactory.sol\":{\"keccak256\":\"0x2deab48735d195729ca704cd5e001203f28c1cc5011b7356799425d90f9ee898\",\"urls\":[\"bzz-raw://ad53f2478809269c7a8d0ae5ce0f1cede8d5f4685aadc02f3ff0f9160d3acc41\",\"dweb:/ipfs/QmUhypEkbxRVJke7WGPgFg6N5YRnzzUMqdsiu1XGgRW2No\"]},\"/usr/src/app/contracts/zombiefeeding.sol\":{\"keccak256\":\"0x10c1cd02694e49bef9dd8ae79f5da46bc31ab036a4de759a918c869b68adfc0e\",\"urls\":[\"bzz-raw://c6c0ecdfe0236cc248b98fb206c8961745c601b39d7dbe5b11fbe6cf4f252d48\",\"dweb:/ipfs/QmaqvM12NeEAAuvW8jekLraLdGCZmgFcxkWMbWbCs321V2\"]},\"/usr/src/app/contracts/zombiehelper.sol\":{\"keccak256\":\"0xfcfd2a8bf60d86caee1c5a85f9d698fc506864933edcf9d3f134b894c93f4f59\",\"urls\":[\"bzz-raw://77e8f96413f788665c9e2748151c0fc16a7191c6e780e51d2fc682afb773e7d9\",\"dweb:/ipfs/QmagXPo45eBZ7WKKLLpANfvjR2FAMPeiKaoSsPmpNHJFpo\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a6002556201518060035566038d7ea4c6800060085560006009556046600a55336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117c58061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635faf28801161008c578063c39cbef111610066578063c39cbef114610490578063ccf670f814610513578063e1fa763814610541578063f2fde38b14610579576100cf565b80635faf2880146103535780637bff0a011461038b5780638da5cb5b14610446576100cf565b806317a7f4cc146100d45780632052465e1461010c5780633ccfd60b146101fe5780634412e10414610208578063528b7b8f146102a15780635f4623f11461030f575b600080fd5b61010a600480360360408110156100ea57600080fd5b8101908080359060200190929190803590602001909291905050506105bd565b005b6101386004803603602081101561012257600080fd5b8101908080359060200190929190505050610748565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156101be5780820151818401526020810190506101a3565b50505050905090810190601f1680156101eb5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b610206610865565b005b61024a6004803603602081101561021e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610928565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561028d578082015181840152602081019050610272565b505050509050019250505060405180910390f35b6102cd600480360360208110156102b757600080fd5b8101908080359060200190929190505050610a55565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103516004803603602081101561032557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a88565b005b6103896004803603604081101561036957600080fd5b810190808035906020019092919080359060200190929190505050610b25565b005b610444600480360360208110156103a157600080fd5b81019080803590602001906401000000008111156103be57600080fd5b8201836020820111156103d057600080fd5b803590602001918460018302840111640100000000831117156103f257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bff565b005b61044e610c75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610511600480360360408110156104a657600080fd5b8101908080359060200190929190803590602001906401000000008111156104cd57600080fd5b8201836020820111156104df57600080fd5b8035906020019184600183028401116401000000008311171561050157600080fd5b9091929391929390505050610c9a565b005b61053f6004803603602081101561052957600080fd5b8101908080359060200190929190505050610d80565b005b6105776004803603604081101561055757600080fd5b810190808035906020019092919080359060200190929190505050610de3565b005b6105bb6004803603602081101561058f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611018565b005b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561063357600080fd5b505afa158015610647573d6000803e3d6000fd5b505050506040513d61014081101561065e57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061074383826040518060400160405280600581526020017f6b6974747900000000000000000000000000000000000000000000000000000081525061107d565b505050565b6004818154811061075557fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108015780601f106107d657610100808354040283529160200191610801565b820191906000526020600020905b8154815290600101906020018083116107e457829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108be57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610925573d6000803e3d6000fd5b50565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040519080825280602002602001820160405280156109995781602001602082028038833980820191505090505b509050600080905060008090505b600480549050811015610a4a578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a3d5780838381518110610a2857fe5b60200260200101818152505081806001019250505b80806001019150506109a7565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae157600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160048281548110610b3657fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610b6957600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd557600080fd5b8360048681548110610be357fe5b9060005260206000209060030201600101819055505050505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610c4b57600080fd5b6000610c56826111e4565b905060648181610c6257fe5b0681039050610c718282611208565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002838160048281548110610cab57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610cde57600080fd5b846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d4a57600080fd5b848460048881548110610d5957fe5b90600052602060002090600302016000019190610d7792919061166b565b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dd957600080fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4f57600080fd5b600060048481548110610e5e57fe5b90600052602060002090600302019050600060048481548110610e7d57fe5b906000526020600020906003020190506000610e996064611493565b9050600a548111610f985782600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505082600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505081600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff16021790555050610f938683600101546040518060400160405280600681526020017f7a6f6d626965000000000000000000000000000000000000000000000000000081525061107d565b611010565b82600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505081600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505061100f83611522565b5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461107157600080fd5b61107a8161154c565b50565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e957600080fd5b6000600485815481106110f857fe5b9060005260206000209060030201905061111181611644565b61111a57600080fd5b600254848161112557fe5b06935060006002858360010154018161113a57fe5b04905060405180807f6b6974747900000000000000000000000000000000000000000000000000000081525060050190506040518091039020848051906020012014156111945760636064828161118d57fe5b0682030190505b6111d36040518060400160405280600681526020017f4e6f4e616d65000000000000000000000000000000000000000000000000000081525082611208565b6111dc82611522565b505050505050565b600080828051906020012060001c905060025481816111ff57fe5b06915050919050565b6000600160046040518060c00160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001908051906020019061129d9291906116eb565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611452578082015181840152602081019050611437565b50505050905090810190601f16801561147f5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b6000600960008154809291906001019190505550814233600954604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c8161151a57fe5b069050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561158657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116ac57803560ff19168380011785556116da565b828001600101855582156116da579182015b828111156116d95782358255916020019190600101906116be565b5b5090506116e7919061176b565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061172c57805160ff191683800117855561175a565b8280016001018555821561175a579182015b8281111561175957825182559160200191906001019061173e565b5b509050611767919061176b565b5090565b61178d91905b80821115611789576000816000905550600101611771565b5090565b9056fea265627a7a7231582097e2842ca012b5f12d0cead868aefaee145ae1459ac30f95951327eeb7af2a3864736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80635faf28801161008c578063c39cbef111610066578063c39cbef114610490578063ccf670f814610513578063e1fa763814610541578063f2fde38b14610579576100cf565b80635faf2880146103535780637bff0a011461038b5780638da5cb5b14610446576100cf565b806317a7f4cc146100d45780632052465e1461010c5780633ccfd60b146101fe5780634412e10414610208578063528b7b8f146102a15780635f4623f11461030f575b600080fd5b61010a600480360360408110156100ea57600080fd5b8101908080359060200190929190803590602001909291905050506105bd565b005b6101386004803603602081101561012257600080fd5b8101908080359060200190929190505050610748565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b838110156101be5780820151818401526020810190506101a3565b50505050905090810190601f1680156101eb5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b610206610865565b005b61024a6004803603602081101561021e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610928565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561028d578082015181840152602081019050610272565b505050509050019250505060405180910390f35b6102cd600480360360208110156102b757600080fd5b8101908080359060200190929190505050610a55565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103516004803603602081101561032557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a88565b005b6103896004803603604081101561036957600080fd5b810190808035906020019092919080359060200190929190505050610b25565b005b610444600480360360208110156103a157600080fd5b81019080803590602001906401000000008111156103be57600080fd5b8201836020820111156103d057600080fd5b803590602001918460018302840111640100000000831117156103f257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610bff565b005b61044e610c75565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610511600480360360408110156104a657600080fd5b8101908080359060200190929190803590602001906401000000008111156104cd57600080fd5b8201836020820111156104df57600080fd5b8035906020019184600183028401116401000000008311171561050157600080fd5b9091929391929390505050610c9a565b005b61053f6004803603602081101561052957600080fd5b8101908080359060200190929190505050610d80565b005b6105776004803603604081101561055757600080fd5b810190808035906020019092919080359060200190929190505050610de3565b005b6105bb6004803603602081101561058f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611018565b005b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b15801561063357600080fd5b505afa158015610647573d6000803e3d6000fd5b505050506040513d61014081101561065e57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508091505061074383826040518060400160405280600581526020017f6b6974747900000000000000000000000000000000000000000000000000000081525061107d565b505050565b6004818154811061075557fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108015780601f106107d657610100808354040283529160200191610801565b820191906000526020600020905b8154815290600101906020018083116107e457829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108be57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610925573d6000803e3d6000fd5b50565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040519080825280602002602001820160405280156109995781602001602082028038833980820191505090505b509050600080905060008090505b600480549050811015610a4a578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a3d5780838381518110610a2857fe5b60200260200101818152505081806001019250505b80806001019150506109a7565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ae157600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160048281548110610b3657fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610b6957600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd557600080fd5b8360048681548110610be357fe5b9060005260206000209060030201600101819055505050505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610c4b57600080fd5b6000610c56826111e4565b905060648181610c6257fe5b0681039050610c718282611208565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002838160048281548110610cab57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610cde57600080fd5b846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d4a57600080fd5b848460048881548110610d5957fe5b90600052602060002090600302016000019190610d7792919061166b565b50505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dd957600080fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4f57600080fd5b600060048481548110610e5e57fe5b90600052602060002090600302019050600060048481548110610e7d57fe5b906000526020600020906003020190506000610e996064611493565b9050600a548111610f985782600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505082600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505081600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff16021790555050610f938683600101546040518060400160405280600681526020017f7a6f6d626965000000000000000000000000000000000000000000000000000081525061107d565b611010565b82600201600a81819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505081600201600881819054906101000a900461ffff168092919060010191906101000a81548161ffff021916908361ffff1602179055505061100f83611522565b5b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461107157600080fd5b61107a8161154c565b50565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e957600080fd5b6000600485815481106110f857fe5b9060005260206000209060030201905061111181611644565b61111a57600080fd5b600254848161112557fe5b06935060006002858360010154018161113a57fe5b04905060405180807f6b6974747900000000000000000000000000000000000000000000000000000081525060050190506040518091039020848051906020012014156111945760636064828161118d57fe5b0682030190505b6111d36040518060400160405280600681526020017f4e6f4e616d65000000000000000000000000000000000000000000000000000081525082611208565b6111dc82611522565b505050505050565b600080828051906020012060001c905060025481816111ff57fe5b06915050919050565b6000600160046040518060c00160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001908051906020019061129d9291906116eb565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611452578082015181840152602081019050611437565b50505050905090810190601f16801561147f5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b6000600960008154809291906001019190505550814233600954604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c8161151a57fe5b069050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561158657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106116ac57803560ff19168380011785556116da565b828001600101855582156116da579182015b828111156116d95782358255916020019190600101906116be565b5b5090506116e7919061176b565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061172c57805160ff191683800117855561175a565b8280016001018555821561175a579182015b8281111561175957825182559160200191906001019061173e565b5b509050611767919061176b565b5090565b61178d91905b80821115611789576000816000905550600101611771565b5090565b9056fea265627a7a7231582097e2842ca012b5f12d0cead868aefaee145ae1459ac30f95951327eeb7af2a3864736f6c63430005100032",
  "sourceMap": "64:787:6:-;;;177:2:7;160:19;;209:9;;203:2;:15;185:33;;244:6;224:26;;127:11:9;109:29;;123:1:6;106:18;;160:2;128:34;;529:10:5;521:5;;:18;;;;;;;;;;;;;;;;;;64:787:6;;;;;;",
  "deployedSourceMap": "64:787:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64:787:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1409:194:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1409:194:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;410:23:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;410:23:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;410:23:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:87:9;;;:::i;:::-;;755:341;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;755:341:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;755:341:9;;;;;;;;;;;;;;;;;440:46:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;440:46:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;566:121:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;566:121:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;601:150:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;601:150:9;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1006:247:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1006:247:7;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1006:247:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1006:247:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1006:247:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1006:247:7;;;;;;;;;;;;;;;:::i;:::-;;245:28:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;433:164:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;433:164:9;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;433:164:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;433:164:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;433:164:9;;;;;;;;;;;;:::i;:::-;;348:81;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;348:81:9;;;;;;;;;;;;;;;;;:::i;:::-;;333:516:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;333:516:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;853:111:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;853:111:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;1409:194:8;1474:13;1515;;;;;;;;;;;:22;;;1538:8;1515:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1515:32:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1515:32:8;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1515:32:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1553:45;1569:9;1580:8;1553:45;;;;;;;;;;;;;;;;;:15;:45::i;:::-;1409:194;;;:::o;410:23:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;257:87:9:-;673:5:5;;;;;;;;;;;659:19;;:10;:19;;;651:28;;;;;;302:5:9;;;;;;;;;;;:14;;:37;317:21;302:37;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;302:37:9;257:87::o;755:341::-;820:13;841:20;875:16;:24;892:6;875:24;;;;;;;;;;;;;;;;864:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;864:36:9;;;;841:59;;906:12;921:1;906:16;;933:6;942:1;933:10;;928:145;949:7;:14;;;;945:1;:18;928:145;;;1002:6;982:26;;:13;:16;996:1;982:16;;;;;;;;;;;;;;;;;;;;;:26;;;978:89;;;1038:1;1020:6;1027:7;1020:15;;;;;;;;;;;;;:19;;;;;1049:9;;;;;;;978:89;965:3;;;;;;;928:145;;;;1085:6;1078:13;;;;755:341;;;:::o;440:46:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;566:121:8:-;673:5:5;;;;;;;;;;;659:19;;:10;:19;;;651:28;;;;;;673:8:8;642:13;;:40;;;;;;;;;;;;;;;;;;566:121;:::o;601:150:9:-;670:2;674:9;234:6;206:7;214:9;206:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;198:43;;;;;;697:9;525:13:8;:24;539:9;525:24;;;;;;;;;;;;;;;;;;;;;511:38;;:10;:38;;;503:47;;;;;;739:7:9;714;722:9;714:18;;;;;;;;;;;;;;;;;;:22;;:32;;;;247:1;601:150;;;;:::o;1006:247:7:-;1112:1;1080:16;:28;1097:10;1080:28;;;;;;;;;;;;;;;;:33;1072:42;;;;;;1124:12;1139:25;1158:5;1139:18;:25::i;:::-;1124:40;;1204:3;1194:7;:13;;;;;;1184:7;:23;1174:33;;1217:29;1231:5;1238:7;1217:13;:29::i;:::-;1006:247;;:::o;245:28:5:-;;;;;;;;;;;;;:::o;433:164:9:-;515:1;518:9;234:6;206:7;214:9;206:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;198:43;;;;;;541:9;525:13:8;:24;539:9;525:24;;;;;;;;;;;;;;;;;;;;;511:38;;:10;:38;;;503:47;;;;;;584:8:9;;558:7;566:9;558:18;;;;;;;;;;;;;;;;;;:23;;:34;;;;;;;:::i;:::-;;247:1;433:164;;;;;:::o;348:81::-;673:5:5;;;;;;;;;;;659:19;;:10;:19;;;651:28;;;;;;420:4:9;407:10;:17;;;;348:81;:::o;333:516:6:-;402:9;525:13:8;:24;539:9;525:24;;;;;;;;;;;;;;;;;;;;;511:38;;:10;:38;;;503:47;;;;;;419:23:6;445:7;453:9;445:18;;;;;;;;;;;;;;;;;;419:44;;469:26;498:7;506:9;498:18;;;;;;;;;;;;;;;;;;469:47;;522:9;534:12;542:3;534:7;:12::i;:::-;522:24;;564;;556:4;:32;552:293;;598:8;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;625:8;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:11;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:53;696:9;707:11;:15;;;680:53;;;;;;;;;;;;;;;;;:15;:53::i;:::-;552:293;;;754:8;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:11;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;812:26;829:8;812:16;:26::i;:::-;552:293;556:1:8;;;333:516:6;;;:::o;853:111:5:-;673:5;;;;;;;;;;;659:19;;:10;:19;;;651:28;;;;;;930:29;949:9;930:18;:29::i;:::-;853:111;:::o;932:473:8:-;1035:9;525:13;:24;539:9;525:24;;;;;;;;;;;;;;;;;;;;;511:38;;:10;:38;;;503:47;;;;;;1052:23;1078:7;1086:9;1078:18;;;;;;;;;;;;;;;;;;1052:44;;1110:18;1119:8;1110;:18::i;:::-;1102:27;;;;;;1161:10;;1148;:23;;;;;;1135:36;;1177:11;1221:1;1207:10;1192:8;:12;;;:25;1191:31;;;;;;1177:45;;1262:18;;;;;;;;;;;;;;;;;;;1248:8;1232:26;;;;;;:48;1228:104;;;1323:2;1317:3;1308:6;:12;;;;;;1299:6;:21;:26;1290:35;;1228:104;1337:31;;;;;;;;;;;;;;;;;;1361:6;1337:13;:31::i;:::-;1374:26;1391:8;1374:16;:26::i;:::-;556:1;;932:473;;;;:::o;833:167:7:-;903:4;919:9;952:4;936:22;;;;;;931:28;;919:40;;983:10;;976:4;:17;;;;;;969:24;;;833:167;;;:::o;541:286::-;615:7;698:1;625:7;638:56;;;;;;;;645:5;638:56;;;;652:4;638:56;;;;658:1;638:56;;;;;;674:12;;668:3;:18;638:56;;;;;;689:1;638:56;;;;;;692:1;638:56;;;;;625:70;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;625:70:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:74;615:84;;729:10;709:13;:17;723:2;709:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;749:16;:28;766:10;749:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;794:26;804:2;808:5;815:4;794:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;794:26:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;541:286;;;:::o;167:162:6:-;216:4;228:9;;:11;;;;;;;;;;;;;316:8;284:3;289:10;301:9;;267:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;267:44:6;;;257:55;;;;;;252:61;;:72;;;;;;245:79;;167:162;;;:::o;691:116:8:-;789:12;;783:3;:18;756:7;:17;;;:46;;;;;;;;;;;;;;;;;;691:116;:::o;1099:179:5:-;1198:1;1177:23;;:9;:23;;;;1169:32;;;;;;1240:9;1212:38;;1233:5;;;;;;;;;;;1212:38;;;;;;;;;;;;1264:9;1256:5;;:17;;;;;;;;;;;;;;;;;;1099:179;:::o;811:117:8:-;876:4;919:3;898:7;:17;;;;;;;;;;;;:24;;;;890:33;;811:117;;;:::o;64:787:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"./zombiehelper.sol\";\n\ncontract ZombieAttack is ZombieHelper {\n  uint randNonce = 0;\n  uint attackVictoryProbability = 70;\n\n  function randMod(uint _modulus) internal returns(uint) {\n    randNonce++;\n    return uint(keccak256(abi.encodePacked(now, msg.sender, randNonce))) % _modulus;\n  }\n\n  function attack(uint _zombieId, uint _targetId) external onlyOwnerOf(_zombieId) {\n    Zombie storage myZombie = zombies[_zombieId];\n    Zombie storage enemyZombie = zombies[_targetId];\n    uint rand = randMod(100);\n    if (rand <= attackVictoryProbability) {\n      myZombie.winCount++;\n      myZombie.level++;\n      enemyZombie.lossCount++;\n      feedAndMultiply(_zombieId, enemyZombie.dna, \"zombie\");\n    } else {\n      myZombie.lossCount++;\n      enemyZombie.winCount++;\n      _triggerCooldown(myZombie);\n    }\n  }\n}",
  "sourcePath": "/usr/src/app/contracts/zombieattack.sol",
  "ast": {
    "absolutePath": "/usr/src/app/contracts/zombieattack.sol",
    "exportedSymbols": {
      "ZombieAttack": [
        451
      ]
    },
    "id": 452,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 345,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "absolutePath": "/usr/src/app/contracts/zombiehelper.sol",
        "file": "./zombiehelper.sol",
        "id": 346,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 946,
        "src": "34:28:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 347,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 945,
              "src": "89:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$945",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 348,
            "nodeType": "InheritanceSpecifier",
            "src": "89:12:6"
          }
        ],
        "contractDependencies": [
          343,
          603,
          792,
          945
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 451,
        "linearizedBaseContracts": [
          451,
          945,
          792,
          603,
          343
        ],
        "name": "ZombieAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 351,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "106:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 349,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "106:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 350,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "123:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 354,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "128:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 352,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "128:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 353,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "160:2:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "222:107:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "228:11:6",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 361,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "228:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "228:11:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 368,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1705,
                                  "src": "284:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 369,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1703,
                                    "src": "289:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "289:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 371,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 351,
                                  "src": "301:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 366,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1690,
                                  "src": "267:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "267:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "267:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 365,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1697,
                            "src": "257:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "257:55:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "252:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "252:61:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 375,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "316:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "252:72:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 360,
                  "id": 377,
                  "nodeType": "Return",
                  "src": "245:79:6"
                }
              ]
            },
            "documentation": null,
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "184:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "183:15:6"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "216:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "215:6:6"
            },
            "scope": 451,
            "src": "167:162:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "413:436:6",
              "statements": [
                {
                  "assignments": [
                    390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 390,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "419:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 389,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 488,
                        "src": "419:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 394,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 391,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "445:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$488_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 393,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 392,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "453:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$488_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "419:44:6"
                },
                {
                  "assignments": [
                    396
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 396,
                      "name": "enemyZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "469:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 395,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 488,
                        "src": "469:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 400,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "498:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$488_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 399,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 398,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "506:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "498:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$488_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "469:47:6"
                },
                {
                  "assignments": [
                    402
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 402,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "522:9:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 401,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "522:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 406,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "542:3:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 403,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "534:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "534:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "522:24:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 407,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "556:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 408,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "564:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "556:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 447,
                    "nodeType": "Block",
                    "src": "746:99:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "754:20:6",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 433,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "754:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 435,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 487,
                            "src": "754:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 437,
                        "nodeType": "ExpressionStatement",
                        "src": "754:20:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "782:22:6",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 438,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "782:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 440,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 485,
                            "src": "782:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 442,
                        "nodeType": "ExpressionStatement",
                        "src": "782:22:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 444,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "829:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            ],
                            "id": 443,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "812:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$488_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "812:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:6"
                      }
                    ]
                  },
                  "id": 448,
                  "nodeType": "IfStatement",
                  "src": "552:293:6",
                  "trueBody": {
                    "id": 432,
                    "nodeType": "Block",
                    "src": "590:150:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "598:19:6",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 410,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "598:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 412,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 485,
                            "src": "598:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 414,
                        "nodeType": "ExpressionStatement",
                        "src": "598:19:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "625:16:6",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 415,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "625:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 481,
                            "src": "625:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 419,
                        "nodeType": "ExpressionStatement",
                        "src": "625:16:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "649:23:6",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "649:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 422,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 487,
                            "src": "649:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 424,
                        "nodeType": "ExpressionStatement",
                        "src": "649:23:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 426,
                              "name": "_zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 381,
                              "src": "696:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 427,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 396,
                                "src": "707:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 479,
                              "src": "707:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7a6f6d626965",
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "724:8:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              },
                              "value": "zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              }
                            ],
                            "id": 425,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "680:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "680:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 431,
                        "nodeType": "ExpressionStatement",
                        "src": "680:53:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 386,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 381,
                    "src": "402:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 387,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 385,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 651,
                  "src": "390:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "390:22:6"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "349:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 383,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "365:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "348:32:6"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:6"
            },
            "scope": 451,
            "src": "333:516:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 452,
        "src": "64:787:6"
      }
    ],
    "src": "0:851:6"
  },
  "legacyAST": {
    "absolutePath": "/usr/src/app/contracts/zombieattack.sol",
    "exportedSymbols": {
      "ZombieAttack": [
        451
      ]
    },
    "id": 452,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 345,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "absolutePath": "/usr/src/app/contracts/zombiehelper.sol",
        "file": "./zombiehelper.sol",
        "id": 346,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 946,
        "src": "34:28:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 347,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 945,
              "src": "89:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$945",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 348,
            "nodeType": "InheritanceSpecifier",
            "src": "89:12:6"
          }
        ],
        "contractDependencies": [
          343,
          603,
          792,
          945
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 451,
        "linearizedBaseContracts": [
          451,
          945,
          792,
          603,
          343
        ],
        "name": "ZombieAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 351,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "106:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 349,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "106:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 350,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "123:1:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 354,
            "name": "attackVictoryProbability",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "128:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 352,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "128:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 353,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "160:2:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "222:107:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "228:11:6",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 361,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "228:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "228:11:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 368,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1705,
                                  "src": "284:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 369,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1703,
                                    "src": "289:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "289:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 371,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 351,
                                  "src": "301:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 366,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1690,
                                  "src": "267:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "267:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "267:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 365,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1697,
                            "src": "257:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "257:55:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "252:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "252:61:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 375,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "316:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "252:72:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 360,
                  "id": 377,
                  "nodeType": "Return",
                  "src": "245:79:6"
                }
              ]
            },
            "documentation": null,
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "184:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "183:15:6"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "216:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "215:6:6"
            },
            "scope": 451,
            "src": "167:162:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "413:436:6",
              "statements": [
                {
                  "assignments": [
                    390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 390,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "419:23:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 389,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 488,
                        "src": "419:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 394,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 391,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "445:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$488_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 393,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 392,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "453:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$488_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "419:44:6"
                },
                {
                  "assignments": [
                    396
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 396,
                      "name": "enemyZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "469:26:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 395,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 488,
                        "src": "469:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 400,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "498:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$488_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 399,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 398,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "506:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "498:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$488_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "469:47:6"
                },
                {
                  "assignments": [
                    402
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 402,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 449,
                      "src": "522:9:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 401,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "522:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 406,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "542:3:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 403,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "534:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "534:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "522:24:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 407,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "556:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 408,
                      "name": "attackVictoryProbability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "564:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "556:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 447,
                    "nodeType": "Block",
                    "src": "746:99:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "754:20:6",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 433,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "754:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 435,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 487,
                            "src": "754:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 437,
                        "nodeType": "ExpressionStatement",
                        "src": "754:20:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "782:22:6",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 438,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "782:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 440,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 485,
                            "src": "782:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 442,
                        "nodeType": "ExpressionStatement",
                        "src": "782:22:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 444,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "829:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            ],
                            "id": 443,
                            "name": "_triggerCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "812:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Zombie_$488_storage_ptr_$returns$__$",
                              "typeString": "function (struct ZombieFactory.Zombie storage pointer)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "812:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "812:26:6"
                      }
                    ]
                  },
                  "id": 448,
                  "nodeType": "IfStatement",
                  "src": "552:293:6",
                  "trueBody": {
                    "id": 432,
                    "nodeType": "Block",
                    "src": "590:150:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "598:19:6",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 410,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "598:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 412,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "winCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 485,
                            "src": "598:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 414,
                        "nodeType": "ExpressionStatement",
                        "src": "598:19:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "625:16:6",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 415,
                              "name": "myZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "625:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 481,
                            "src": "625:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 419,
                        "nodeType": "ExpressionStatement",
                        "src": "625:16:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "649:23:6",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "enemyZombie",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "649:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                "typeString": "struct ZombieFactory.Zombie storage pointer"
                              }
                            },
                            "id": 422,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lossCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 487,
                            "src": "649:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 424,
                        "nodeType": "ExpressionStatement",
                        "src": "649:23:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 426,
                              "name": "_zombieId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 381,
                              "src": "696:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 427,
                                "name": "enemyZombie",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 396,
                                "src": "707:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Zombie_$488_storage_ptr",
                                  "typeString": "struct ZombieFactory.Zombie storage pointer"
                                }
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dna",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 479,
                              "src": "707:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7a6f6d626965",
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "724:8:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              },
                              "value": "zombie"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2d78170249c02248453a34f03adc0d8b9b269bf65531ea8b62c0e665cbc1fe",
                                "typeString": "literal_string \"zombie\""
                              }
                            ],
                            "id": 425,
                            "name": "feedAndMultiply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "680:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,string memory)"
                            }
                          },
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "680:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 431,
                        "nodeType": "ExpressionStatement",
                        "src": "680:53:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 386,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 381,
                    "src": "402:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 387,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 385,
                  "name": "onlyOwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 651,
                  "src": "390:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "390:22:6"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "349:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 383,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "365:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 382,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "348:32:6"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:6"
            },
            "scope": 451,
            "src": "333:516:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 452,
        "src": "64:787:6"
      }
    ],
    "src": "0:851:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-05T15:14:53.535Z",
  "devdoc": {
    "methods": {
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}